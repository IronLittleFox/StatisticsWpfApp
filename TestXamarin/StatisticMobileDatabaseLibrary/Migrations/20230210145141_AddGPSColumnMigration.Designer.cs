// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatisticMobileDatabaseLibrary.Context;

namespace StatisticMobileDatabaseLibrary.Migrations
{
    [DbContext(typeof(StatisticDatabaseContext))]
    [Migration("20230210145141_AddGPSColumnMigration")]
    partial class AddGPSColumnMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("StatisticMobileDatabaseLibrary.Entities.CopyBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarCode")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("PageFrom")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageTo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegisteredUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("CopyBooks");
                });

            modelBuilder.Entity("StatisticMobileDatabaseLibrary.Entities.RegisteredUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RegisteredUsers");
                });

            modelBuilder.Entity("StatisticMobileDatabaseLibrary.Entities.ScannedPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CopyBookId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("CopyBookId");

                    b.ToTable("ScannedPhotos");
                });

            modelBuilder.Entity("StatisticMobileDatabaseLibrary.Entities.CopyBook", b =>
                {
                    b.HasOne("StatisticMobileDatabaseLibrary.Entities.RegisteredUser", "RegisteredUser")
                        .WithMany()
                        .HasForeignKey("RegisteredUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StatisticMobileDatabaseLibrary.Entities.ScannedPhoto", b =>
                {
                    b.HasOne("StatisticMobileDatabaseLibrary.Entities.CopyBook", "CopyBook")
                        .WithMany("ScannedPhotos")
                        .HasForeignKey("CopyBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
